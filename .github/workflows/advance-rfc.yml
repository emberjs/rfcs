name: Open PR to advance an RFC to the next stage

on:
  push:
    branches: [ main, master ]
    paths:
      - 'text/*.md'

jobs:
  check-rfcs:
    name: 'Did push advance the stage of an RFC?'
    runs-on: ubuntu-latest
    outputs:
      new-stage: ${{ steps.new-stage.outputs.value }}
      rfc-number: ${{ steps.modified-rfc.outputs.rfc-number }}
      modified-rfc: ${{ steps.rfcs.outputs.modified-rfc }}

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup RFCs tooling
        uses: ./.github/actions/setup-rfcs-tooling

      - name: RFCs Added or Changed
        id: rfcs
        uses: ./.github/actions/find-added-or-modified-rfcs
        with:
          base-sha: ${{ github.event.before }}

      - name: Fail if more than 1 RFC is added or modified
        if: steps.rfcs.outputs.modified-rfcs-count > 1
        run: |
          echo "::error::More than 1 RFC is added or modified in this PR; unable to automatically open PRs for advancement"
          exit 1

      - name: Find modified RFC Number
        id: modified-rfc
        run: |
          changed_file=${{ steps.rfcs.outputs.modified-rfc }}
          rfc_number="${changed_file//[!0-9]/}"
          echo "RFC Number: $rfc_number"
          echo "::set-output name=rfc-number::$rfc_number"

      - name: Determine if stage has changed
        id: has-stage-changed
        continue-on-error: true
        run: |
          if [[ ${{ steps.rfcs.outputs.added-rfcs-count }} == 1 ]]; then
            echo "A new RFC was added"        
            echo "::set-output name=value::true"
          else
            node rfcs-tooling/has-stage-changed.js ${{ github.event.before }} ${{ steps.rfcs.outputs.modified-rfc }}
            if [[ $? == 0 ]]; then
              echo "::set-output name=value::true"
            else
              echo "::set-output name=value::false"
            fi          
          fi     

      - name: Find new stage
        if: steps.has-stage-changed.outputs.value == 'true'
        id: new-stage
        run: |
          new_stage=`node rfcs-tooling/find-next-stage.js ${{ steps.rfcs.outputs.modified-rfc }}`
          echo "New Stage: $new_stage"
          echo "::set-output name=value::$new_stage"

  advance-rfc:
    name: Open PR to advance RFC to the next stage
    runs-on: ubuntu-latest
    needs: [ check-rfcs ]
    if: needs.check-rfcs.outputs.new-stage
    steps:
      - uses: actions/checkout@v3

      - name: Setup RFCs tooling
        uses: ./.github/actions/setup-rfcs-tooling

      - name: Update frontmatter
        run: |
          node rfcs-tooling/update-rfc-stage.js ${{ needs.check-rfcs.outputs.new-stage}} ${{ needs.check-rfcs.outputs.modified-rfc }}

      - name: Set variables for use in PR
        id: pr-variables
        run: |
          frontmatter=`node rfcs-tooling/rfc-frontmatter.js ${{ needs.check-rfcs.outputs.modified-rfc }}`
          ready_for_release_pr=`echo $frontmatter | jq '.prs."ready-for-release"'`
          ready_for_release_pr=${ready_for_release_pr//\"/}
          released_pr=`echo $frontmatter | jq '.prs.released'`
          released_pr=${released_pr//\"/}
          if [[ ${{ needs.check-rfcs.outputs.new-stage }} == "ready-for-release" ]]; then
            pretty_stage="Ready for Release"
            template=`sed -e 's/__RFC_NUMBER__/${{ needs.check-rfcs.outputs.rfc-number }}/g' .github/PULL_REQUEST_TEMPLATE/advance-to-ready-for-release.md`  
          elif [[ ${{ needs.check-rfcs.outputs.new-stage }} == "released" ]]; then
            pretty_stage="Released"
            template=`sed -e 's/__RFC_NUMBER__/${{ needs.check-rfcs.outputs.rfc-number }}/g' -e "s>__READY_FOR_RELEASE_PR__>$ready_for_release_pr>g" .github/PULL_REQUEST_TEMPLATE/advance-to-released.md`
          elif [[ ${{ needs.check-rfcs.outputs.new-stage }} == "recommended" ]]; then
            pretty_stage="Recommended"
            template=`sed -e 's/__RFC_NUMBER__/${{ needs.check-rfcs.outputs.rfc-number }}/g' -e "s>__READY_FOR_RELEASE_PR__>$ready_for_release_pr>g" -e "s>__RELEASED_PR__>$released_pr>g" .github/PULL_REQUEST_TEMPLATE/advance-to-recommended.md`
          fi
          # Hacks to pass multi-line strings around in GH Workflows
          template="${template//'%'/'%25'}"
          template="${template//$'\n'/'%0A'}"
          template="${template//$'\r'/'%0D'}"
          echo "::set-output name=body::$template"
          echo "Pretty Stage: $pretty_stage"
          echo "::set-output name=pretty-stage::$pretty_stage"

      - name: Open PR
        id: create-pr
        uses: peter-evans/create-pull-request@v4
        with:
          token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
          commit-message: "Advance RFC to Stage ${{ needs.check-rfcs.outputs.new-stage }}"
          add-paths: 'text'
          branch: "advance-rfc-${{ needs.check-rfcs.outputs.rfc-number }}"
          title: "Advance RFC #${{ needs.check-rfcs.outputs.rfc-number}} to Stage ${{ steps.pr-variables.outputs.pretty-stage }}"
          body: "${{ steps.pr-variables.outputs.body }}"
          labels: "RFC Advancement,S-${{ steps.pr-variables.outputs.pretty-stage}}"
          draft: true

      - name: Add new PR link to RFC frontmatter
        run: |
          node rfcs-tooling/update-advancement-pr.js ${{ needs.check-rfcs.outputs.modified-rfc }} ${{ needs.check-rfcs.outputs.new-stage}} ${{ steps.create-pr.outputs.pull-request-url }}

      - name: Update PR
        run: |
          git config --local user.email 'ember-rfcs@example.com'
          git config --local user.name 'Ember.js RFCS CI'
          git add ${{ needs.check-rfcs.outputs.modified-rfc }}
          git commit -m "Update RFC ${{ needs.check-rfcs.outputs.rfc-number }} ${{ needs.check-rfcs.outputs.new-stage }} PR URL"
          git push origin advance-rfc-${{ needs.check-rfcs.outputs.rfc-number }}
